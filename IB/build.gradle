apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 2
        versionName "2.0.1"
        project.archivesBaseName = "opentok-ib-android"
        project.version = "2.0.1"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    allprojects {
        repositories {
            jcenter()
            maven {
                url "http://tokbox.bintray.com/maven"
            }
        }
    }

    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.aar')) {
                def fileName = "${archivesBaseName}-${version}.aar"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }

        def copyFile = task("copyFile${variant.name.capitalize()}", type: Copy) {
            //Copy README.md
            from '../README.md'
            into 'build/outputs/'
        }

        def copyChangeLog = task("copyChangeLog${variant.name.capitalize()}", type: Copy) {
            //Copy README.md
            from '../CHANGELOG.md'
            into 'build/outputs/'
        }

        def javadoc = task("generateJavaDoc${variant.name.capitalize()}", type: Javadoc, dependsOn: "generate${variant.name.capitalize()}Sources") {
            source = 'src/main/java'
            classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
            destinationDir = file("build/outputs/docs/")
            title = 'OpenTok Interactive Broadcast Solution for Android'
            exclude "com/opentok/android/**"
            exclude "com/tokbox/android/IB/chat/**"
            exclude "com/tokbox/android/IB/common/**"
            exclude "com/tokbox/android/IB/events/**"
            exclude "com/tokbox/android/IB/logging/**"
            exclude "com/tokbox/android/IB/model/**"
            exclude "com/tokbox/android/IB/network/**"
            exclude "com/tokbox/android/IB/services/**"
            exclude "com/tokbox/android/IB/ui/**"
            exclude "com/tokbox/android/IB/video/**"
            exclude "com/tokbox/android/IB/CelebrityHostActivity.java"
            exclude "com/tokbox/android/IB/FanActivity.java"
        }

        def zipBundle = task("zipBundle${variant.name.capitalize()}", type: Zip) {
            from('build/outputs')
            include '**/aar/**'
            include '**/docs/**'
            include '**/README.md'
            include '**/CHANGELOG.md'
            exclude '**/lint-results-debug_files/**'
            destinationDir = file(".")
            archiveName = "${archivesBaseName}-${version}.zip"
        }

        zipBundle.dependsOn build
        zipBundle.dependsOn javadoc
        zipBundle.dependsOn copyFile
        zipBundle.dependsOn copyChangeLog
    }
}

dependencies {
    provided fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.opentok.android:opentok-android-sdk:2.12.0'
    compile 'com.opentok.android:opentok-solutions-logging:+'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.android.volley:volley:1.0.0'
    compile 'com.google.firebase:firebase-database:10.0.1'
    compile 'com.google.firebase:firebase-storage:10.0.1'
    compile 'com.google.firebase:firebase-auth:10.0.1'
    compile 'com.google.gms:google-services:3.1.0'
    testCompile 'junit:junit:4.12'
}